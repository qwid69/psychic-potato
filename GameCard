import React from "react";
import { Link } from "react-router-dom";
import { createPageUrl } from "@/utils";
import { MapPin, Users, Clock, Star, DollarSign } from "lucide-react";
import { Badge } from "@/components/ui/badge";
import { Button } from "@/components/ui/button";
import { format, parseISO } from "date-fns";

export default function GameCard({ game, onJoin, currentUser }) {
  const skillColors = {
    beginner: "bg-green-100 text-green-800 border-green-200",
    intermediate: "bg-blue-100 text-blue-800 border-blue-200", 
    advanced: "bg-purple-100 text-purple-800 border-purple-200",
    professional: "bg-red-100 text-red-800 border-red-200"
  };

  const formatGameTime = () => {
    const gameDate = parseISO(game.date);
    return format(gameDate, 'EEE, MMM d');
  };

  const canJoin = game.current_players < game.max_players && 
                 game.organizer_id !== currentUser?.id;

  return (
    <div className="bg-white rounded-xl p-5 shadow-md hover:shadow-lg transition-all duration-200 border border-gray-100">
      <div className="flex justify-between items-start mb-4">
        <div className="flex-1">
          <h3 className="text-lg font-bold text-gray-900 mb-2">{game.title}</h3>
          <div className="space-y-2">
            <div className="flex items-center space-x-2 text-gray-600">
              <MapPin className="w-4 h-4" />
              <span className="text-sm">{game.location}</span>
            </div>
            <div className="flex items-center space-x-2 text-gray-600">
              <Clock className="w-4 h-4" />
              <span className="text-sm">{formatGameTime()} at {game.time}</span>
            </div>
          </div>
        </div>
        <div className="text-right">
          <div className="flex items-center justify-end space-x-1 text-sm text-gray-500 mb-2">
            <Users className="w-4 h-4" />
            <span>{game.current_players}/{game.max_players}</span>
          </div>
          {game.court_cost > 0 && (
            <div className="flex items-center justify-end space-x-1 text-sm font-semibold text-green-600">
              <DollarSign className="w-4 h-4" />
              <span>{game.court_cost}/player</span>
            </div>
          )}
        </div>
      </div>

      <div className="flex items-center justify-between mb-4">
        <Badge className={`${skillColors[game.skill_level]} border`}>
          <Star className="w-3 h-3 mr-1" />
          {game.skill_level}
        </Badge>
        
        <div className="flex -space-x-1">
          {[...Array(game.current_players)].map((_, i) => (
            <div key={i} className="w-8 h-8 bg-gradient-to-r from-green-400 to-blue-500 rounded-full border-2 border-white flex items-center justify-center">
              <span className="text-white text-xs font-bold">P</span>
            </div>
          ))}
          {[...Array(game.max_players - game.current_players)].map((_, i) => (
            <div key={i} className="w-8 h-8 bg-gray-200 rounded-full border-2 border-white flex items-center justify-center">
              <span className="text-gray-400 text-xs">?</span>
            </div>
          ))}
        </div>
      </div>

      {game.description && (
        <p className="text-sm text-gray-600 mb-4 line-clamp-2">{game.description}</p>
      )}

      <div className="flex space-x-3">
        <Link 
          to={createPageUrl(`GameDetails?id=${game.id}`)}
          className="flex-1"
        >
          <Button variant="outline" className="w-full rounded-lg">
            View Details
          </Button>
        </Link>
        
        {canJoin && (
          <Button 
            onClick={() => onJoin(game.id)}
            className="flex-1 bg-gradient-to-r from-green-500 to-blue-500 text-white rounded-lg hover:shadow-lg"
          >
            Join Game
          </Button>
        )}
      </div>
    </div>
  );
}

import React, { useState, useEffect } from 'react';
import { Game, User } from '@/entities/all';
import { Badge } from "@/components/ui/badge";
import { format, parseISO } from 'date-fns';
import { Trophy, ShieldX } from 'lucide-react';

export default function PastGameCard({ game, result, viewedPlayerId }) {
  const [players, setPlayers] = useState({
    team1: [],
    team2: []
  });
  const [loading, setLoading] = useState(true);

  useEffect(() => {
    const fetchPlayers = async () => {
      const playerIds = [result.team1_player1, result.team1_player2, result.team2_player1, result.team2_player2].filter(Boolean);
      if (playerIds.length > 0) {
        const playersData = await User.filter({ id: { $in: playerIds } });
        const playerMap = playersData.reduce((acc, p) => ({ ...acc, [p.id]: p.full_name }), {});

        setPlayers({
          team1: [playerMap[result.team1_player1], playerMap[result.team1_player2]].filter(Boolean),
          team2: [playerMap[result.team2_player1], playerMap[result.team2_player2]].filter(Boolean)
        });
      }
      setLoading(false);
    };

    fetchPlayers();
  }, [result]);

  const viewedPlayerTeam = [result.team1_player1, result.team1_player2].includes(viewedPlayerId) ? 'team1' : 'team2';
  const isWinner = (viewedPlayerTeam === 'team1' && result.team1_score > result.team2_score) || (viewedPlayerTeam === 'team2' && result.team2_score > result.team1_score);
  
  if (loading) return <div className="h-24 bg-gray-100 rounded-xl animate-pulse"></div>;

  return (
    <div className={`p-4 rounded-xl border-2 ${isWinner ? 'border-green-200 bg-green-50' : 'border-red-200 bg-red-50'}`}>
      <div className="flex justify-between items-start">
        <div>
          <h4 className="font-semibold text-gray-800">{game.title}</h4>
          <p className="text-sm text-gray-500">{format(parseISO(game.date), 'MMMM d, yyyy')}</p>
        </div>
        <Badge variant="outline" className={`flex items-center space-x-1 ${isWinner ? 'bg-white border-green-300 text-green-700' : 'bg-white border-red-300 text-red-700'}`}>
          {isWinner ? <Trophy className="w-3 h-3" /> : <ShieldX className="w-3 h-3" />}
          <span>{isWinner ? 'Win' : 'Loss'}</span>
        </Badge>
      </div>

      <div className="mt-3 flex items-center justify-center space-x-4">
        <div className="text-center">
          <p className="text-xs text-gray-600">Team 1</p>
          <p className="text-sm font-medium">{players.team1.join(' & ')}</p>
          <p className="text-2xl font-bold">{result.team1_score}</p>
        </div>
        <span className="text-gray-400">-</span>
        <div className="text-center">
          <p className="text-xs text-gray-600">Team 2</p>
          <p className="text-sm font-medium">{players.team2.join(' & ')}</p>
          <p className="text-2xl font-bold">{result.team2_score}</p>
        </div>
      </div>
    </div>
  );
}
